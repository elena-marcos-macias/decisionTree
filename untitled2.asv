%--------- Add function path and set save path ----------
addpath (genpath('./utils'));
addpath ('./requirements');
savePath = './results/';


%% TRAINING DATASET

%--------- Load data ---------
fileName = char("FUS_test6.xlsx");
T_Original = readtable(['./data/' fileName]);

% -------- Remove rows with NaN --------
T_Original = rmmissing(T_Original);  % Remove rows that contain at least one NaN

% -------- Select data to use (columns with string or numerical criteria) ---------------
target_columns = [1,22];
ignore_columns = [2,3];
T_Data = selectColumns (T_Original, target_columns, ignore_columns);
T_ResultsVariable = T_Original.Death;

% --- Convert T_Data into a pure numeric matrix X ---

% 1) Find which vars are already numeric
varNames = T_Data.Properties.VariableNames;
isNum    = varfun(@isnumeric, T_Data, 'OutputFormat','uniform');

% 2) Pull out numeric part
X_num = table2array(T_Data(:, isNum));

% 3) Convert each non-numeric column into dummy variables
X_cat = [];
for v = varNames(~isNum)
    col = T_Data.(v{1});
    % Make sure it's a cellstr or string
    col = string(col);
    cats = categorical(col);
    % Grab one-hot encoding
    m = dummyvar(cats);
    % (optionally rename or track which column is which later)
    X_cat = [X_cat, m];
end

% 4) Combine
X = [X_num, X_cat];

% 5) Now X is numeric and you can safely do:
[coeff, score, ~, ~, explained] = pca(X);
Y = tsne(X, 'NumDimensions',2, 'Perplexity',30);

% If you want to color by your outcome, convert it to numeric or categorical
labels = T_ResultsVariable;  

% 1) PCA
[coeff, score, ~, ~, explained] = pca(X);

% 2) t-SNE
%    You can tweak 'Perplexity' (30 is default) and 'NumDimensions' (2 here)
Y = tsne(X, 'NumDimensions', 2, 'Perplexity', 30);

% 3) Plot side-by-side
figure('Position',[100 100 900 400])

% PCA subplot
subplot(1,2,1)
gscatter(score(:,1), score(:,2), labels, [], '.', 12)
xlabel(sprintf('PC1 (%.1f%%)',explained(1)))
ylabel(sprintf('PC2 (%.1f%%)',explained(2)))
title('PCA')
grid on
axis tight

% t-SNE subplot
subplot(1,2,2)
gscatter(Y(:,1), Y(:,2), labels, [], '.', 12)
xlabel('t-SNE 1')
ylabel('t-SNE 2')
title('t-SNE')
grid on
axis tight

% Optional: super-title for the figure
sgtitle('Dataset Projection: PCA vs. t-SNE')